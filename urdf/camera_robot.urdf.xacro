<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="camera_robot">

  <!-- Properties -->
  <xacro:property name="box_size" value="0.3" />
  <xacro:property name="camera_size" value="0.05" />
  
  <!-- Materials -->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  
  <!-- Base link -->
  <link name="cam_base_link">
    <visual>
      <origin xyz="0 0 ${box_size/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${box_size} ${box_size} ${box_size}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${box_size/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${box_size} ${box_size} ${box_size}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${box_size/2}" rpy="0 0 0"/>
      <mass value="1"/>
      <inertia
        ixx="${1/12*1*(box_size*box_size+box_size*box_size)}" ixy="0.0" ixz="0.0"
        iyy="${1/12*1*(box_size*box_size+box_size*box_size)}" iyz="0.0"
        izz="${1/12*1*(box_size*box_size+box_size*box_size)}"/>
    </inertial>
  </link>
  
  <!-- Camera link -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="black"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
        ixx="${1/12*0.1*(camera_size*camera_size+camera_size*camera_size)}" ixy="0.0" ixz="0.0"
        iyy="${1/12*0.1*(camera_size*camera_size+camera_size*camera_size)}" iyz="0.0"
        izz="${1/12*0.1*(camera_size*camera_size+camera_size*camera_size)}"/>
    </inertial>
  </link>
  
  <!-- Camera joint -->
  <joint name="camera_joint" type="fixed">
    <parent link="cam_base_link"/>
    <child link="camera_link"/>
    <origin xyz="${box_size/2 + camera_size/2} 0 ${box_size}" rpy="0 0 0"/>
  </joint>
  
  <!-- Camera optical link -->
  <link name="camera_optical_link"/>
  
  <!-- Camera optical joint -->
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_link"/>
    <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
  </joint>
  
  <!-- Gazebo materials -->
  <gazebo reference="camera_support_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  
  <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- Camera plugin -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_optical_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>